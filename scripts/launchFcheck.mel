// Copyright (C) 1997-2004 Alias Systems Corp.
// 
// The information in this file is provided for the exclusive use of the
// licensees of Alias.  Such users have the right to use, modify,
// and incorporate this code into other products for purposes authorized
// by the Alias license agreement, without fee.
// 
// ALIAS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL ALIAS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.

// Copyright (C) 1997-2004 Alias,
// a division of Silicon Graphics Limited.
// 
// The information in this file is provided for the exclusive use of the
// licensees of Alias.  Such users have the right to use, modify,
// and incorporate this code into other products for purposes authorized
// by the Alias license agreement, without fee.
// 
// ALIAS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL ALIAS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.


global proc launchFcheck ( 
						  int $sequence 
						  )
//Description
// This procedure launches fcheck to view an image or a sequence
// $sequence = 0 is an image
// $sequence = 1 is a sequence
{
	
	//check the stored optionVar for the path to look in first
	if (!`optionVar -exists "launchFcheckPath"`){
		string $workspace = `workspace -query -directory`;
		optionVar -stringValue "launchFcheckPath" ($workspace + "*.*");
	}
	
	//query the optionVar
	string $filePath = `optionVar -query launchFcheckPath`;
	
	//let the user specify the image or sequence to view
	string $fileName = `fileDialog -directoryMask $filePath`;
	if ($fileName != ""){
		launchFcheckCmd $fileName $sequence;
		
		//change the optionVar to the latest image so we look in the 
		//right place next time
		int $numPathComponents;//number of pieces to the file path
		string $filePathBuffer[];//break the file path into pieces
		$numPathComponents = `tokenize $fileName "/" $filePathBuffer`;
		string $newFilePath;
		
		//reassemble the path to the selected file without the fileName
		int $i;
		if (`substring $fileName 1 1` == "/") $newFilePath += "/";
		for ($i = 0; $i < ($numPathComponents - 1); $i++){
			$newFilePath += $filePathBuffer[$i];
			$newFilePath += "/";
		}
		
		//finish the path with a wildcard
		$newFilePath += "*.*";

		//set the optionVar
		optionVar -stringValue "launchFcheckPath" $newFilePath;
	}
	
	
}
